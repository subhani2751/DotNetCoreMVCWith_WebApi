@model DotNetCoreMVCWith_WebApi.Models.Employee
@{
    ViewData["Title"] = "AddEmployee";
}
<div style="position: absolute; top: 20px; right: 20px; z-index: 999;">
    <button type="button" id="Logoutbtn" click="logout()" class="btn btn-success">Log out</button>

</div>
<div class="container p-4 bg-light rounded shadow mb-5">

    <form id="AddEmployeeForm">
        <h2>Employee Registration form</h2>
            @await Html.PartialAsync("_FormFields")
            <button type="submit" value="Save" class="btn btn-primary">Save</button>
        <button type="submit" value="Cancel" class="btn btn-secondary">Cancel</button>

    </form>
</div>
<div class="container p-4 bg-white rounded shadow">
    <h3>Search Employee:</h3>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <input type="text" id="searchEmployee" class="form-control" style="width:30%" placeholder="Search Employee">
        <div>
            <input type="file" id="excelFile" accept=".xls,.xlsx" style="display: none;">
            <button id="importExcel" class="btn btn-success me-2">Import Excel</button>
            <div class="btn-group me-2">
                <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    Export
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item export-option" data-format="CSV">Export CSV</a></li>
                    <li><a class="dropdown-item export-option" data-format="Excel">Export Excel</a></li>
                    <li><a class="dropdown-item export-option" data-format="PDF">Export PDF</a></li>
                </ul>
            </div>
            <button id="deleteSelected" class="btn btn-danger">Delete Selected</button>
        </div>
    </div>
    <table class="table table-bordered mt-3">
        <thead id="employeeTableHead" class="table-dark">
            <tr>
                <th><input type="checkbox" id="selectAll"></th>
                <th>Employee ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Department</th>
                <th>Hire Date</th>
                <th>Salary</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="employeeTableBody">
            <!-- Data will be inserted here dynamically -->
        </tbody>
    </table>
   @*  <div id="loader" class="loader-overlay">
        <div class="loader"></div>
    </div> *@
    <div class="d-flex justify-content-center align-items-center mt-3 gap-4">
        @await Html.PartialAsync("_Paging")
    </div>
</div>
@* <script src="~/scripts/validationformates.js"></script>
<script src="~/scripts/export_import.js"></script>
<script src="~/scripts/pagging.js"></script>
<script src="~/scripts/JWTToken.js"></script> *@
<script type="text/javascript">
    let actionType = "";
        function showLoader() {
        $("#loader-overlay").fadeIn(); // Smoothly show loader
    }

    function hideLoader() {
        $("#loader-overlay").fadeOut(); // Smoothly hide loader
    }
    //$.validator.setDefaults({
    //    ignore: []
    //});
    //console.log("jQuery Loaded:", !!window.jQuery);
    //console.log("Validation Loaded:", typeof $.fn.validate !== "undefined");
    $("button[type=submit]").click(function () {
        actionType = $(this).val(); // Get button value (save or cancel)
        //if(actionType=="Cancel"){
            
        //}
    });
    $(document).on('change', '#selectAll', function () {
        $(".rowCheckbox").prop('checked', this.checked);
    });
    $(document).on('change', '.rowCheckbox', function () {
        if (!this.checked) {
            $('#selectAll').prop('checked', false);
        }
        // If all checkboxes are checked, check Select All
        if ($('.rowCheckbox:checked').length === $('.rowCheckbox').length) {
            $('#selectAll').prop('checked', true);
        }
    });
    $("#deleteSelected").click(function () {
        var selected = $(".rowCheckbox:checked");
        if (selected.length === 0) {
            alert("Please select at least one employee to delete.");
            return;
        }
        var empIds = [];
        selected.each(function () {
            empIds.push($(this).data("id"));
        });

        // Convert array to CSV format
        var empIdsCSV = empIds.join(',');
            $.ajax({
            url: "/api/ApiEmployee/Delete?ids=" + empIdsCSV,
                type: "put",
                contentType: "application/json",
                success: function (result) {
                empIds.forEach(function (empId) {
                    $("#row_" + empId).remove(); // Remove each row by ID
                });
                $('#selectAll').prop('checked', false);
                     // Remove the row on success
                },
                error: function (err) {
                    alert("Failed to delete employee with ID " + empId);
                }
            });
    });
    $("#searchEmployee").on("keyup", function () {
        var value = $(this).val().toLowerCase();
        $("#employeeTableBody tr").filter(function () {
            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
        });
    });
    $(document).ready(function () {
        $("#AddEmployeeForm").validate({
            rules: {
                FirstName: {
                    required: true,
                    AlphabelsFormate: true
                },
                LastName: {
                    required: true,
                    AlphabelsFormate: true
                },
                Email: {
                    required: true,
                    EmailFormate: true
                },
                Department: {
                    required: true,
                    AlphabelsFormate: true
                },
                HireDate: {
                    required: true
                },
                Salary: {
                    required: true,
                    /*number:true,*/
                    minlength: 2,
                    salaryRange: true
                }
            },
            messages: {
                FirstName: {
                    required: "First name is required.",
                    AlphabelsFormate: "Accepts only alphabets.."
                },
                LastName: {
                    required: "last name is required..",
                    AlphabelsFormate: "Accepts only alphabets.."
                },
                Email: {
                    required: "Email is required..",
                    EmailFormate: "Enter a valid Email only"
                },
                Department: {
                    required: "Department is required..",
                    AlphabelsFormate: "Accepts only alphabets.."
                },
                HireDate: {
                    required: "Hire date is required.."
                },
                Salary: {
                    required: "Salary is required",
                    /*number: "only Enter numbers",*/
                    minlength: "At least 2 characters",
                    salaryRange: "Enter a valid salary (numbers and up to 2 decimal places only)"
                }
            },
            errorPlacement: function (error, element) {
                error.insertAfter(element);
                error.css("color", "red");
            },
            submitHandler: function (form) 
              {
                if (actionType === "Save") {
                    var Formdata = {
                        FirstName: $("#FirstName").val(),
                        LastName: $("#LastName").val(),
                        Email: $("#Email").val(),
                        Department: $("#Department").val(),
                        HireDate: $("#HireDate").val(),
                        Salary: $("#Salary").val(),
                    };
                    $.ajax({
                        url: '/api/ApiEmployee',
                        type: 'post',
                        contentType: 'application/json',
                        data: JSON.stringify(Formdata),
                        success: function (response) {
                            form.reset();
                            listEmployees(response);
                            alert(response.smessage);
                        },
                        error: function (e) {
                            alert('Error ' + e.responseText);
                        }
                    });
                }
                else if (actionType == "Cancel") {
                    form.reset();
                }
            }
        });
        //listEmployees();
          LoadTable();
       
     });

    function listEmployees(Formdata) {
        showLoader();
        if (Formdata != null && Formdata != undefined) {
            var tableBody = $("#employeeTableBody");
            var row = `<tr id="row_${Formdata.employeeId}">
                            <td><input type="checkbox" class="rowCheckbox" data-id="${Formdata.employeeId}"></td>
                            <td>${Formdata.employeeId}</td>
                            <td>${Formdata.firstName}</td>
                            <td>${Formdata.lastName}</td>
                            <td>${Formdata.email}</td>
                            <td>${Formdata.department}</td>
                            <td>${Formdata.hireDate ? Formdata.hireDate.split("T")[0] : ""}</td>
                            <td>${Formdata.salary}</td>
                        <td>
                                <button class="btn btn-success btn-sm Edit" data-id="${Formdata.employeeId}">Edit</button>
                                <button class="btn btn-danger btn-sm deleteRow" data-id="${Formdata.employeeId}">Delete</button>
                        </td>
                    </tr>`;
            tableBody.append(row);
            hideLoader();
        }
        else{
            $.ajax({
                url: "/api/ApiEmployee/GetAllEmployees",
                type: "get",
                contentType: "application/json",
                success: function (Result) {
                    var tableBody = $("#employeeTableBody");
                    $.each(Result, function (index, emp) {
                        var row = `<tr id="row_${emp.employeeId}">
                                        <td><input type="checkbox" class="rowCheckbox" data-id="${emp.employeeId}"></td>
                                        <td>${emp.employeeId}</td>
                                        <td>${emp.firstName}</td>
                                        <td>${emp.lastName}</td>
                                        <td>${emp.email}</td>
                                        <td>${emp.department}</td>
                                        <td>${emp.hireDate ? emp.hireDate.split("T")[0] : ""}</td>
                                        <td>${emp.salary}</td>
                                        <td>
                                            <button class="btn btn-success btn-sm Edit" data-id="${emp.employeeId}">Edit</button>
                                            <button class="btn btn-danger btn-sm deleteRow" data-id="${emp.employeeId}">Delete</button>
                                        </td>
                                    </tr>`;
                        tableBody.append(row);
                       hideLoader();
                    });
                    /*alert("data came successfully!" + Result);*/
                },
                error: function (E) {
                   hideLoader();
                    alert("data hadn't came !" + E);
                }
            });
        }
     };
          $(document).on("click", ".Edit", function () {
                var Empid = $(this).data("id");
                // var row = $("#row_" + Empid);
                // $.ajax({
                //     url: "/Employee/EditEmployee?id=" + Empid,
                //     type: "put",
                //     contentType: "application/json",
                //     success: function(result){
                //         alert("updated success fully");
                //     },
                //     error: function (Er) {
                //         alert("updated success fully");
                //     }
                // });
                window.location.href = "/Employee/EditEmployee/" + Empid;
            });
            $(document).on("click", ".deleteRow", function () {
                var Empid = $(this).data("id");
                 var row = $("#row_" + Empid);
                console.log(row);
                $.ajax({
                    url: "/api/ApiEmployee/Delete?ids=" + Empid,
                    type: "put",
                    contentType: "application/json",
                    data : "",
                    success: function(result){
                        row.remove();
                        alert("Employee Deleted");
                    },
                    error: function (Er) {
                        alert("Employee not Deleted");
                    }
                });
                //window.location.href = "/Employee/EditEmployee/" + Empid;
            });
</script>
<style type="text/css">
    .container {
        max-width: 1200px;
    }

    /* Add space between form and table section */
    .mb-5 {
        margin-bottom: 3rem !important;
    }

    #searchEmployee {
        max-width: 300px;
    }

    #AddEmployeeForm input {
        width: 100%;
    }

    .shadow {
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
     /* Loader Styles */
    /*.loader-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.7);
        z-index: 9999;
        justify-content: center;
        align-items: center;
    }

    .loader {
        border: 8px solid #f3f3f3;
        border-top: 8px solid #3498db;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% {transform: rotate(0deg);}
        100% { transform: rotate(360deg);}
      } */

    /* Loader Overlay (Full-Screen Cover) */
    #loader-overlay {
        display: none; /* Initially hidden */
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(255, 255, 255, 0.7); /* Light transparent background */
        z-index: 9998;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    /* Loader (Spinner Animation) */
    .loader {
        border: 8px solid #f3f3f3;
        border-top: 8px solid #3498db;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        animation: spin 1s linear infinite;
        z-index: 9999;
    }

    /* Keyframe Animation for Spinner */
    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>

